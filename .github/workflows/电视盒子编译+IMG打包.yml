#============================================================================================
# https://github.com/ophub/amlogic-s9xxx-openwrt
# Description: 电视盒子编译+IMG打包
#============================================================================================

name: N1

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      source_branch:
        description: "immortalwrt"
        required: false
        default: "immortalwrt-master"
        type: choice
        options:
          - openwrt-main
          - lede-master
          - immortalwrt-master
          - Lienol-master
      openwrt_board:
        description: "N1-s905d"
        required: false
        default: "s905d"
        type: choice
        options:
          - s905d
      openwrt_kernel:
        description: "Select kernel version"
        required: false
        default: "5.15.x_5.4.x_6.1.x"
        type: choice
        options:
          - 5.15.x_5.4.x_6.1.x
      auto_kernel:
        description: "Auto use the latest kernel"
        required: false
        default: true
        type: boolean
      kernel_repo:
        description: "Set the kernel repository"
        required: false
        default: "ophub/kernel"
        type: choice
        options:
          - ophub/kernel
      kernel_usage:
        description: "Set the tags of the stable kernel."
        required: false
        default: "stable"
        type: choice
        options:
          - stable
          - flippy
          - dev
          - beta
      openwrt_storage:
        description: "Select image storage type."
        required: false
        default: "save"
        type: choice
        options:
          - save
          - temp
      builder_name:
        description: "Set OpenWrt builder signature."
        required: false
        default: "angel"
        type: choice
        options:
          - angel
          - yourname

env:
  FEEDS_CONF: config/${{ inputs.source_branch }}/feeds.conf.default
  CONFIG_FILE: config/${{ inputs.source_branch }}/N1-config
  SCRIPT_SH: config/${{ inputs.source_branch }}/N1-diy-part1.sh
  SRC_SH: config/${{ inputs.source_branch }}/N1-diy-part2.sh
  TZ: America/New_York

jobs:
  build_openwrt:
    name: Build OpenWrt and release
    runs-on: ubuntu-20.04
    permissions:
      contents: write
      pull-requests: write

    steps:
    - name: Checkout
      uses: actions/checkout@v3.1.0
      with:
        ref: main
    
    - name: Free up space
      uses: jlumbroso/free-disk-space@main
      with:
        tool-cache: false
        android: true
        dotnet: true
        haskell: true
        large-packages: true
        docker-images: true
        swap-storage: true
    
    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL git.io/depends-ubuntu-2004)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir
    
    - name: Clone source code [ ${{ inputs.source_branch }} ]
      id: codes
      working-directory: /workdir
      if: ${{ steps.init.outputs.status }} == 'success' && !cancelled()
      run: |
        # Set up compilation source code
        if [[ "${{ inputs.source_branch }}" == *"openwrt"* ]]; then
            REPO_URL="https://github.com/openwrt/openwrt"
            REPO_BRANCH="main"
            TAGS_NAME="official"
        elif [[ "${{ inputs.source_branch }}" == *"lede"* ]]; then
            REPO_URL="https://github.com/coolsnowwolf/lede"
            REPO_BRANCH="master"
            TAGS_NAME="lede"
        elif [[ "${{ inputs.source_branch }}" == *"immortalwrt"* ]]; then
            REPO_URL="https://github.com/immortalwrt/immortalwrt"
            REPO_BRANCH="openwrt-23.05"
            TAGS_NAME="immortalwrt"
        elif [[ "${{ inputs.source_branch }}" == *"Lienol"* ]]; then
            REPO_URL="https://github.com/Lienol/openwrt"
            REPO_BRANCH="22.03"
            TAGS_NAME="Lienol"
        else
            echo "Unknown source code repository."
            exit 1
        fi
         # Clone source code
        git clone -q --single-branch --depth=1 --branch=${REPO_BRANCH} ${REPO_URL} openwrt
        ln -sf /workdir/openwrt ${GITHUB_WORKSPACE}/openwrt
         # Set output information
        echo "build_tag=OpenWrt_${TAGS_NAME}_${{ inputs.openwrt_storage }}_$(date +"%Y.%m")" >> ${GITHUB_OUTPUT}
        echo -e "REPO_URL: [ ${REPO_URL} ]\nREPO_BRANCH: [ ${REPO_BRANCH} ]\nTAGS_NAME: [ ${TAGS_NAME} ]"
        df -hT ${PWD}
        echo "status=success" >> ${GITHUB_OUTPUT}
    - name: Load custom feeds
      run: |
        [ -e files ] && mv files openwrt/files
        [[ -f "${FEEDS_CONF}" ]] && cp -f ${FEEDS_CONF} openwrt/feeds.conf.default
        chmod +x ${SCRIPT_SH}
        cd openwrt/
        ${GITHUB_WORKSPACE}/${SCRIPT_SH}
    - name: Update feeds
      run: |
        chmod +x ${SRC_SH}
        ${GITHUB_WORKSPACE}/${SRC_SH}
        cd openwrt/ && ./scripts/feeds update -a
    - name: Install feeds
      run: cd openwrt/ && ./scripts/feeds install -a
    - name: Load custom configuration
      run: |
        [[ -d "files" ]] && mv -f files openwrt/files
        [[ -e "${CONFIG_FILE}" ]] && cp -f ${CONFIG_FILE} openwrt/.config
                  
    - name: Download package
      id: package
      run: |
        cd openwrt/
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Compile the OpenWrt
      id: compile
      run: |
        cd openwrt/
        echo -e "$(nproc) thread compile"
        make -j$(($(nproc) + 1)) V=s || make -j1 || make -j1 V=s
        echo "======================="
        echo "Space usage:"
        echo "======================="
        df -h
        echo "======================="
        du -h --max-depth=1 ./ --exclude=build_dir --exclude=bin
        du -h --max-depth=1 ./build_dir
        du -h --max-depth=1 ./bin
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Clear server space
      id: clean
      if: ${{ steps.compile.outputs.status }} == 'success' && !cancelled()
      run: |
        # Clean up server space
        cd openwrt/
        mkdir output
        cp -f bin/targets/*/*/*rootfs.tar.gz output/
        cp -f .config output/config
        rm -rf $(ls . | grep -v "^output$" | xargs) 2>/dev/null
        # Generate sha256sum file
        cd output/
        for file in *; do [[ ! -d "${file}" ]] && sha256sum "${file}" >"${file}.sha"; done
        # Set output information
        df -hT ${PWD}
        echo "status=success" >> ${GITHUB_OUTPUT}

    - name: Upload OpenWrt to Release
      uses: ncipollo/release-action@main
      if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: openwrt/output/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}

    - name: Packaging OpenWrt
      if: ${{ steps.clean.outputs.status }} == 'success' && !cancelled()
      uses: ophub/amlogic-s9xxx-openwrt@main
      with:
        openwrt_path: openwrt/output/*rootfs.tar.gz
        openwrt_board: ${{ inputs.openwrt_board }}
        openwrt_kernel: ${{ inputs.openwrt_kernel }}
        auto_kernel: ${{ inputs.auto_kernel }}
        kernel_repo: ${{ inputs.kernel_repo }}
        kernel_usage: ${{ inputs.kernel_usage }}
        builder_name: ${{ inputs.builder_name }}
        gh_token: ${{ secrets.GH_TOKEN }}

    - name: Upload the packaged OpenWrt
      uses: ncipollo/release-action@main
      if: ${{ env.PACKAGED_STATUS }} == 'success' && !cancelled()
      with:
        tag: ${{ steps.codes.outputs.build_tag }}
        artifacts: ${{ env.PACKAGED_OUTPUTPATH }}/*
        allowUpdates: true
        removeArtifacts: false
        replacesArtifacts: true
        token: ${{ secrets.GH_TOKEN }}
        body: |
          ### N1 immortalwrt information
          - Default IP: 192.168.2.200
          - Default username: root
          - Default password: none
          ### Install to EMMC
          - Login to OpenWrt → System → Amlogic Service → Install OpenWrt
          ### OpenWrt Image Verification
          - sha256sum
